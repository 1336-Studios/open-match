syntax = 'proto3';
package api;
option go_package = "github.com/GoogleCloudPlatform/open-match/internal/pb";

// The protobuf messages sent in the gRPC calls are defined 'messages.proto'.
import 'api/protobuf-spec/messages.proto';

service Backend {
  // Calls to ask the matchmaker to run a matchmaking function.
  //
  // Run MMF once.  Return a matchobject that fits this profile.
  rpc CreateMatch(messages.MatchObject) returns (messages.MatchObject) {} 
  // Continually run MMF and stream matchobjects that fit this profile until
  // client closes the connection.
  rpc ListMatches(messages.MatchObject) returns (stream messages.MatchObject) {}

  // Delete a matchobject from state storage manually. (Matchobjects in state
  // storage will also automatically expire after a while)
  rpc DeleteMatch(messages.MatchObject) returns (messages.Result) {}

  // Call for communication of connection info to players. 
  //
  // Write the connection info for the list of players in the
  // Assignments.messages.Rosters to state storage.  The FrontendAPI is
  // responsible for sending anything written here to the game clients.
  rpc CreateAssignments(messages.Assignments) returns (messages.Result) {}
  // Remove DGS connection info from state storage for all players in the
  // messages.Roster.
  rpc DeleteAssignments(messages.Roster) returns (messages.Result) {}
}
