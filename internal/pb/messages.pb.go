// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/protobuf-spec/messages.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MatchObject_Status int32

const (
	MatchObject_INCONCLUSIVE MatchObject_Status = 0
	MatchObject_INVALID      MatchObject_Status = 1
	MatchObject_VALID        MatchObject_Status = 2
)

var MatchObject_Status_name = map[int32]string{
	0: "INCONCLUSIVE",
	1: "INVALID",
	2: "VALID",
}

var MatchObject_Status_value = map[string]int32{
	"INCONCLUSIVE": 0,
	"INVALID":      1,
	"VALID":        2,
}

func (x MatchObject_Status) String() string {
	return proto.EnumName(MatchObject_Status_name, int32(x))
}

func (MatchObject_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ec5e45ff8e70c33d, []int{0, 0}
}

// Open Match's internal representation and wire protocol format for "MatchObjects".
// In order to request a match using the Backend API, your backend code should generate
// a new MatchObject with an ID and properties filled in (for more details about valid
// values for these fields, see the documentation).  Open Match then sends the Match
// Object through to your matchmaking function, where you add players to 'rosters' and
// store any schemaless data you wish in the 'properties' field.  The MatchObject
// is then sent, populated, out through the Backend API to your backend code.
//
// MatchObjects contain a number of fields, but many gRPC calls that take a
// MatchObject as input only require a few of them to be filled in.  Check the
// gRPC function in question for more details.
type MatchObject struct {
	Id                   string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Properties           string             `protobuf:"bytes,2,opt,name=properties,proto3" json:"properties,omitempty"`
	Error                string             `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	Rosters              []*Roster          `protobuf:"bytes,4,rep,name=rosters,proto3" json:"rosters,omitempty"`
	Pools                []*PlayerPool      `protobuf:"bytes,5,rep,name=pools,proto3" json:"pools,omitempty"`
	Status               MatchObject_Status `protobuf:"varint,6,opt,name=status,proto3,enum=messages.MatchObject_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *MatchObject) Reset()         { *m = MatchObject{} }
func (m *MatchObject) String() string { return proto.CompactTextString(m) }
func (*MatchObject) ProtoMessage()    {}
func (*MatchObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec5e45ff8e70c33d, []int{0}
}

func (m *MatchObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatchObject.Unmarshal(m, b)
}
func (m *MatchObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatchObject.Marshal(b, m, deterministic)
}
func (m *MatchObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchObject.Merge(m, src)
}
func (m *MatchObject) XXX_Size() int {
	return xxx_messageInfo_MatchObject.Size(m)
}
func (m *MatchObject) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchObject.DiscardUnknown(m)
}

var xxx_messageInfo_MatchObject proto.InternalMessageInfo

func (m *MatchObject) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MatchObject) GetProperties() string {
	if m != nil {
		return m.Properties
	}
	return ""
}

func (m *MatchObject) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *MatchObject) GetRosters() []*Roster {
	if m != nil {
		return m.Rosters
	}
	return nil
}

func (m *MatchObject) GetPools() []*PlayerPool {
	if m != nil {
		return m.Pools
	}
	return nil
}

func (m *MatchObject) GetStatus() MatchObject_Status {
	if m != nil {
		return m.Status
	}
	return MatchObject_INCONCLUSIVE
}

// Data structure to hold a list of players in a match.
type Roster struct {
	Name                 string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Players              []*Player `protobuf:"bytes,2,rep,name=players,proto3" json:"players,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Roster) Reset()         { *m = Roster{} }
func (m *Roster) String() string { return proto.CompactTextString(m) }
func (*Roster) ProtoMessage()    {}
func (*Roster) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec5e45ff8e70c33d, []int{1}
}

func (m *Roster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Roster.Unmarshal(m, b)
}
func (m *Roster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Roster.Marshal(b, m, deterministic)
}
func (m *Roster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Roster.Merge(m, src)
}
func (m *Roster) XXX_Size() int {
	return xxx_messageInfo_Roster.Size(m)
}
func (m *Roster) XXX_DiscardUnknown() {
	xxx_messageInfo_Roster.DiscardUnknown(m)
}

var xxx_messageInfo_Roster proto.InternalMessageInfo

func (m *Roster) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Roster) GetPlayers() []*Player {
	if m != nil {
		return m.Players
	}
	return nil
}

// A 'hard' filter to apply to the player pool.
type Filter struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Attribute            string   `protobuf:"bytes,2,opt,name=attribute,proto3" json:"attribute,omitempty"`
	Maxv                 int64    `protobuf:"varint,3,opt,name=maxv,proto3" json:"maxv,omitempty"`
	Minv                 int64    `protobuf:"varint,4,opt,name=minv,proto3" json:"minv,omitempty"`
	Stats                *Stats   `protobuf:"bytes,5,opt,name=stats,proto3" json:"stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Filter) Reset()         { *m = Filter{} }
func (m *Filter) String() string { return proto.CompactTextString(m) }
func (*Filter) ProtoMessage()    {}
func (*Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec5e45ff8e70c33d, []int{2}
}

func (m *Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Filter.Unmarshal(m, b)
}
func (m *Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Filter.Marshal(b, m, deterministic)
}
func (m *Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Filter.Merge(m, src)
}
func (m *Filter) XXX_Size() int {
	return xxx_messageInfo_Filter.Size(m)
}
func (m *Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_Filter proto.InternalMessageInfo

func (m *Filter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Filter) GetAttribute() string {
	if m != nil {
		return m.Attribute
	}
	return ""
}

func (m *Filter) GetMaxv() int64 {
	if m != nil {
		return m.Maxv
	}
	return 0
}

func (m *Filter) GetMinv() int64 {
	if m != nil {
		return m.Minv
	}
	return 0
}

func (m *Filter) GetStats() *Stats {
	if m != nil {
		return m.Stats
	}
	return nil
}

// Holds statistics
type Stats struct {
	Count                int64    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Elapsed              float64  `protobuf:"fixed64,2,opt,name=elapsed,proto3" json:"elapsed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Stats) Reset()         { *m = Stats{} }
func (m *Stats) String() string { return proto.CompactTextString(m) }
func (*Stats) ProtoMessage()    {}
func (*Stats) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec5e45ff8e70c33d, []int{3}
}

func (m *Stats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stats.Unmarshal(m, b)
}
func (m *Stats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stats.Marshal(b, m, deterministic)
}
func (m *Stats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stats.Merge(m, src)
}
func (m *Stats) XXX_Size() int {
	return xxx_messageInfo_Stats.Size(m)
}
func (m *Stats) XXX_DiscardUnknown() {
	xxx_messageInfo_Stats.DiscardUnknown(m)
}

var xxx_messageInfo_Stats proto.InternalMessageInfo

func (m *Stats) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *Stats) GetElapsed() float64 {
	if m != nil {
		return m.Elapsed
	}
	return 0
}

// PlayerPools are defined by a set of 'hard' filters, and can be filled in
// with the players that match those filters.
//
// PlayerPools contain a number of fields, but many gRPC calls that take a
// PlayerPool as input only require a few of them to be filled in.  Check the
// gRPC function in question for more details.
type PlayerPool struct {
	Name                 string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Filters              []*Filter `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	Roster               *Roster   `protobuf:"bytes,3,opt,name=roster,proto3" json:"roster,omitempty"`
	Stats                *Stats    `protobuf:"bytes,4,opt,name=stats,proto3" json:"stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *PlayerPool) Reset()         { *m = PlayerPool{} }
func (m *PlayerPool) String() string { return proto.CompactTextString(m) }
func (*PlayerPool) ProtoMessage()    {}
func (*PlayerPool) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec5e45ff8e70c33d, []int{4}
}

func (m *PlayerPool) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerPool.Unmarshal(m, b)
}
func (m *PlayerPool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerPool.Marshal(b, m, deterministic)
}
func (m *PlayerPool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerPool.Merge(m, src)
}
func (m *PlayerPool) XXX_Size() int {
	return xxx_messageInfo_PlayerPool.Size(m)
}
func (m *PlayerPool) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerPool.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerPool proto.InternalMessageInfo

func (m *PlayerPool) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PlayerPool) GetFilters() []*Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *PlayerPool) GetRoster() *Roster {
	if m != nil {
		return m.Roster
	}
	return nil
}

func (m *PlayerPool) GetStats() *Stats {
	if m != nil {
		return m.Stats
	}
	return nil
}

// Data structure to hold details about a player
type Player struct {
	Id                   string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Properties           string              `protobuf:"bytes,2,opt,name=properties,proto3" json:"properties,omitempty"`
	Pool                 string              `protobuf:"bytes,3,opt,name=pool,proto3" json:"pool,omitempty"`
	Attributes           []*Player_Attribute `protobuf:"bytes,4,rep,name=attributes,proto3" json:"attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Player) Reset()         { *m = Player{} }
func (m *Player) String() string { return proto.CompactTextString(m) }
func (*Player) ProtoMessage()    {}
func (*Player) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec5e45ff8e70c33d, []int{5}
}

func (m *Player) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Player.Unmarshal(m, b)
}
func (m *Player) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Player.Marshal(b, m, deterministic)
}
func (m *Player) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Player.Merge(m, src)
}
func (m *Player) XXX_Size() int {
	return xxx_messageInfo_Player.Size(m)
}
func (m *Player) XXX_DiscardUnknown() {
	xxx_messageInfo_Player.DiscardUnknown(m)
}

var xxx_messageInfo_Player proto.InternalMessageInfo

func (m *Player) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Player) GetProperties() string {
	if m != nil {
		return m.Properties
	}
	return ""
}

func (m *Player) GetPool() string {
	if m != nil {
		return m.Pool
	}
	return ""
}

func (m *Player) GetAttributes() []*Player_Attribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

type Player_Attribute struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value                int64    `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Player_Attribute) Reset()         { *m = Player_Attribute{} }
func (m *Player_Attribute) String() string { return proto.CompactTextString(m) }
func (*Player_Attribute) ProtoMessage()    {}
func (*Player_Attribute) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec5e45ff8e70c33d, []int{5, 0}
}

func (m *Player_Attribute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Player_Attribute.Unmarshal(m, b)
}
func (m *Player_Attribute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Player_Attribute.Marshal(b, m, deterministic)
}
func (m *Player_Attribute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Player_Attribute.Merge(m, src)
}
func (m *Player_Attribute) XXX_Size() int {
	return xxx_messageInfo_Player_Attribute.Size(m)
}
func (m *Player_Attribute) XXX_DiscardUnknown() {
	xxx_messageInfo_Player_Attribute.DiscardUnknown(m)
}

var xxx_messageInfo_Player_Attribute proto.InternalMessageInfo

func (m *Player_Attribute) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Player_Attribute) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

// Simple message to return success/failure and error status.
type Result struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec5e45ff8e70c33d, []int{6}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *Result) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

// IlInput is an empty message reserved for future use.
type IlInput struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IlInput) Reset()         { *m = IlInput{} }
func (m *IlInput) String() string { return proto.CompactTextString(m) }
func (*IlInput) ProtoMessage()    {}
func (*IlInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec5e45ff8e70c33d, []int{7}
}

func (m *IlInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IlInput.Unmarshal(m, b)
}
func (m *IlInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IlInput.Marshal(b, m, deterministic)
}
func (m *IlInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IlInput.Merge(m, src)
}
func (m *IlInput) XXX_Size() int {
	return xxx_messageInfo_IlInput.Size(m)
}
func (m *IlInput) XXX_DiscardUnknown() {
	xxx_messageInfo_IlInput.DiscardUnknown(m)
}

var xxx_messageInfo_IlInput proto.InternalMessageInfo

// Simple message used to pass the connection string for the DGS to the player.
// DEPRECATED: Likely to be integrated into another protobuf message in a future version.
type ConnectionInfo struct {
	ConnectionString     string   `protobuf:"bytes,1,opt,name=connection_string,json=connectionString,proto3" json:"connection_string,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectionInfo) Reset()         { *m = ConnectionInfo{} }
func (m *ConnectionInfo) String() string { return proto.CompactTextString(m) }
func (*ConnectionInfo) ProtoMessage()    {}
func (*ConnectionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec5e45ff8e70c33d, []int{8}
}

func (m *ConnectionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectionInfo.Unmarshal(m, b)
}
func (m *ConnectionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectionInfo.Marshal(b, m, deterministic)
}
func (m *ConnectionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectionInfo.Merge(m, src)
}
func (m *ConnectionInfo) XXX_Size() int {
	return xxx_messageInfo_ConnectionInfo.Size(m)
}
func (m *ConnectionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectionInfo proto.InternalMessageInfo

func (m *ConnectionInfo) GetConnectionString() string {
	if m != nil {
		return m.ConnectionString
	}
	return ""
}

type Assignments struct {
	Rosters              []*Roster       `protobuf:"bytes,1,rep,name=rosters,proto3" json:"rosters,omitempty"`
	ConnectionInfo       *ConnectionInfo `protobuf:"bytes,2,opt,name=connection_info,json=connectionInfo,proto3" json:"connection_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Assignments) Reset()         { *m = Assignments{} }
func (m *Assignments) String() string { return proto.CompactTextString(m) }
func (*Assignments) ProtoMessage()    {}
func (*Assignments) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec5e45ff8e70c33d, []int{9}
}

func (m *Assignments) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Assignments.Unmarshal(m, b)
}
func (m *Assignments) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Assignments.Marshal(b, m, deterministic)
}
func (m *Assignments) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Assignments.Merge(m, src)
}
func (m *Assignments) XXX_Size() int {
	return xxx_messageInfo_Assignments.Size(m)
}
func (m *Assignments) XXX_DiscardUnknown() {
	xxx_messageInfo_Assignments.DiscardUnknown(m)
}

var xxx_messageInfo_Assignments proto.InternalMessageInfo

func (m *Assignments) GetRosters() []*Roster {
	if m != nil {
		return m.Rosters
	}
	return nil
}

func (m *Assignments) GetConnectionInfo() *ConnectionInfo {
	if m != nil {
		return m.ConnectionInfo
	}
	return nil
}

type Profile struct {
	ProfileId            string   `protobuf:"bytes,1,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
	ProposalId           string   `protobuf:"bytes,2,opt,name=proposal_id,json=proposalId,proto3" json:"proposal_id,omitempty"`
	RequestId            string   `protobuf:"bytes,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	ErrorId              string   `protobuf:"bytes,4,opt,name=error_id,json=errorId,proto3" json:"error_id,omitempty"`
	Timestamp            string   `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Profile) Reset()         { *m = Profile{} }
func (m *Profile) String() string { return proto.CompactTextString(m) }
func (*Profile) ProtoMessage()    {}
func (*Profile) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec5e45ff8e70c33d, []int{10}
}

func (m *Profile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Profile.Unmarshal(m, b)
}
func (m *Profile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Profile.Marshal(b, m, deterministic)
}
func (m *Profile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Profile.Merge(m, src)
}
func (m *Profile) XXX_Size() int {
	return xxx_messageInfo_Profile.Size(m)
}
func (m *Profile) XXX_DiscardUnknown() {
	xxx_messageInfo_Profile.DiscardUnknown(m)
}

var xxx_messageInfo_Profile proto.InternalMessageInfo

func (m *Profile) GetProfileId() string {
	if m != nil {
		return m.ProfileId
	}
	return ""
}

func (m *Profile) GetProposalId() string {
	if m != nil {
		return m.ProposalId
	}
	return ""
}

func (m *Profile) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *Profile) GetErrorId() string {
	if m != nil {
		return m.ErrorId
	}
	return ""
}

func (m *Profile) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func init() {
	proto.RegisterEnum("messages.MatchObject_Status", MatchObject_Status_name, MatchObject_Status_value)
	proto.RegisterType((*MatchObject)(nil), "messages.MatchObject")
	proto.RegisterType((*Roster)(nil), "messages.Roster")
	proto.RegisterType((*Filter)(nil), "messages.Filter")
	proto.RegisterType((*Stats)(nil), "messages.Stats")
	proto.RegisterType((*PlayerPool)(nil), "messages.PlayerPool")
	proto.RegisterType((*Player)(nil), "messages.Player")
	proto.RegisterType((*Player_Attribute)(nil), "messages.Player.Attribute")
	proto.RegisterType((*Result)(nil), "messages.Result")
	proto.RegisterType((*IlInput)(nil), "messages.IlInput")
	proto.RegisterType((*ConnectionInfo)(nil), "messages.ConnectionInfo")
	proto.RegisterType((*Assignments)(nil), "messages.Assignments")
	proto.RegisterType((*Profile)(nil), "messages.Profile")
}

func init() { proto.RegisterFile("api/protobuf-spec/messages.proto", fileDescriptor_ec5e45ff8e70c33d) }

var fileDescriptor_ec5e45ff8e70c33d = []byte{
	// 701 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xcd, 0x6e, 0xd3, 0x4c,
	0x14, 0xfd, 0x9c, 0x1f, 0xa7, 0xbe, 0xf9, 0x94, 0xe6, 0x1b, 0x75, 0xe1, 0xaf, 0x2a, 0x10, 0x59,
	0x42, 0x8a, 0x8a, 0x9a, 0x48, 0x81, 0xaa, 0x08, 0x89, 0x45, 0x08, 0x7f, 0x96, 0x4a, 0x1b, 0x4d,
	0x45, 0x17, 0x6c, 0x2a, 0xc7, 0x9e, 0xa4, 0x83, 0xec, 0x19, 0x33, 0x33, 0x8e, 0x40, 0xe2, 0x05,
	0x78, 0x00, 0x96, 0x2c, 0x78, 0x12, 0x5e, 0x0d, 0xcd, 0xd8, 0x8e, 0xdd, 0xd2, 0x82, 0xd8, 0xcd,
	0x3d, 0xf7, 0x4c, 0x72, 0xce, 0x3d, 0x73, 0x0d, 0x83, 0x20, 0xa5, 0xe3, 0x54, 0x70, 0xc5, 0x17,
	0xd9, 0xf2, 0x40, 0xa6, 0x24, 0x1c, 0x27, 0x44, 0xca, 0x60, 0x45, 0xe4, 0xc8, 0xc0, 0x68, 0xab,
	0xac, 0xbd, 0xaf, 0x0d, 0xe8, 0xbe, 0x09, 0x54, 0x78, 0x79, 0xba, 0x78, 0x4f, 0x42, 0x85, 0x7a,
	0xd0, 0xa0, 0x91, 0x6b, 0x0d, 0xac, 0xa1, 0x83, 0x1b, 0x34, 0x42, 0x77, 0x01, 0x52, 0xc1, 0x53,
	0x22, 0x14, 0x25, 0xd2, 0x6d, 0x18, 0xbc, 0x86, 0xa0, 0x1d, 0x68, 0x13, 0x21, 0xb8, 0x70, 0x9b,
	0xa6, 0x95, 0x17, 0x68, 0x1f, 0x3a, 0x82, 0x4b, 0x45, 0x84, 0x74, 0x5b, 0x83, 0xe6, 0xb0, 0x3b,
	0xe9, 0x8f, 0x36, 0x0a, 0xb0, 0x69, 0xe0, 0x92, 0x80, 0xf6, 0xa1, 0x9d, 0x72, 0x1e, 0x4b, 0xb7,
	0x6d, 0x98, 0x3b, 0x15, 0x73, 0x1e, 0x07, 0x9f, 0x88, 0x98, 0x73, 0x1e, 0xe3, 0x9c, 0x82, 0x1e,
	0x81, 0x2d, 0x55, 0xa0, 0x32, 0xe9, 0xda, 0x03, 0x6b, 0xd8, 0x9b, 0xec, 0x55, 0xe4, 0x9a, 0x89,
	0xd1, 0x99, 0xe1, 0xe0, 0x82, 0xeb, 0x4d, 0xc0, 0xce, 0x11, 0xd4, 0x87, 0x7f, 0xfd, 0x93, 0xd9,
	0xe9, 0xc9, 0xec, 0xf8, 0xed, 0x99, 0x7f, 0xfe, 0xa2, 0xff, 0x0f, 0xea, 0x42, 0xc7, 0x3f, 0x39,
	0x9f, 0x1e, 0xfb, 0xcf, 0xfb, 0x16, 0x72, 0xa0, 0x9d, 0x1f, 0x1b, 0xde, 0x6b, 0xb0, 0x73, 0xa1,
	0x08, 0x41, 0x8b, 0x05, 0x09, 0x29, 0x66, 0x62, 0xce, 0xda, 0x5f, 0x6a, 0xc4, 0xe9, 0x91, 0x5c,
	0xf3, 0x97, 0xab, 0xc6, 0x25, 0xc1, 0xfb, 0x62, 0x81, 0xfd, 0x92, 0xc6, 0xb7, 0xfd, 0xd4, 0x1e,
	0x38, 0x81, 0x52, 0x82, 0x2e, 0x32, 0x45, 0x8a, 0xf9, 0x56, 0x80, 0xbe, 0x91, 0x04, 0x1f, 0xd7,
	0x66, 0xba, 0x4d, 0x6c, 0xce, 0x06, 0xa3, 0x6c, 0xed, 0xb6, 0x0a, 0x8c, 0xb2, 0x35, 0xba, 0x0f,
	0x6d, 0x6d, 0x56, 0x0f, 0xd1, 0x1a, 0x76, 0x27, 0xdb, 0x95, 0x1c, 0xed, 0x5c, 0xe2, 0xbc, 0xeb,
	0x1d, 0x41, 0xdb, 0xd4, 0x3a, 0xb6, 0x90, 0x67, 0x4c, 0x19, 0x29, 0x4d, 0x9c, 0x17, 0xc8, 0x85,
	0x0e, 0x89, 0x83, 0x54, 0x92, 0xc8, 0x28, 0xb1, 0x70, 0x59, 0x7a, 0xdf, 0x2c, 0x80, 0x2a, 0x8e,
	0xdb, 0x66, 0xb2, 0x34, 0x36, 0x6f, 0x98, 0x49, 0xee, 0x1f, 0x97, 0x04, 0x34, 0x04, 0x3b, 0x8f,
	0xdf, 0x18, 0xbb, 0xe9, 0x79, 0x14, 0xfd, 0xca, 0x58, 0xeb, 0xb7, 0xc6, 0x7e, 0x58, 0x60, 0xe7,
	0xfa, 0xfe, 0xfa, 0x05, 0x23, 0x68, 0xe9, 0xc7, 0x55, 0x3c, 0x60, 0x73, 0x46, 0x4f, 0x00, 0x36,
	0x19, 0x94, 0x4f, 0x78, 0xf7, 0x7a, 0xc4, 0xa3, 0x69, 0x49, 0xc1, 0x35, 0xf6, 0xee, 0x21, 0x38,
	0xd3, 0x7a, 0x7e, 0xbf, 0x0c, 0x6a, 0x07, 0xda, 0xeb, 0x20, 0xce, 0xf2, 0xb4, 0x9b, 0x38, 0x2f,
	0xbc, 0xc7, 0x60, 0x63, 0x22, 0xb3, 0xd8, 0xa4, 0x20, 0xb3, 0x30, 0x24, 0x52, 0x9a, 0x6b, 0x5b,
	0xb8, 0x2c, 0xab, 0x65, 0x6b, 0xd4, 0x96, 0xcd, 0x73, 0xa0, 0xe3, 0xc7, 0x3e, 0x4b, 0x33, 0xe5,
	0x3d, 0x85, 0xde, 0x8c, 0x33, 0x46, 0x42, 0x45, 0x39, 0xf3, 0xd9, 0x92, 0xa3, 0x07, 0xf0, 0x5f,
	0xb8, 0x41, 0x2e, 0xa4, 0x12, 0x94, 0xad, 0x0a, 0x35, 0xfd, 0xaa, 0x71, 0x66, 0x70, 0xef, 0x33,
	0x74, 0xa7, 0x52, 0xd2, 0x15, 0x4b, 0x08, 0x53, 0xb2, 0xbe, 0xc5, 0xd6, 0x9f, 0xb6, 0x78, 0x0a,
	0xdb, 0xb5, 0xff, 0xa1, 0x6c, 0xc9, 0x8d, 0xc8, 0xee, 0xc4, 0xad, 0xee, 0x5c, 0x95, 0x86, 0x7b,
	0xe1, 0x95, 0xda, 0xfb, 0x6e, 0x41, 0x67, 0x2e, 0xf8, 0x92, 0xc6, 0x04, 0xdd, 0x31, 0xa1, 0xe9,
	0xe3, 0xc5, 0x26, 0x4c, 0xa7, 0x40, 0xfc, 0x08, 0xdd, 0x83, 0xae, 0x4e, 0x90, 0xcb, 0x20, 0xd6,
	0xfd, 0x5a, 0xa8, 0x1a, 0xf2, 0x23, 0x7d, 0x5f, 0x90, 0x0f, 0x19, 0x91, 0x4a, 0xf7, 0xf3, 0x68,
	0x9d, 0x02, 0xf1, 0x23, 0xf4, 0x3f, 0x6c, 0x99, 0xd9, 0xe9, 0x66, 0xcb, 0x34, 0x3b, 0xa6, 0xf6,
	0x23, 0xbd, 0x8f, 0x8a, 0x26, 0x44, 0xaa, 0x20, 0x49, 0xcd, 0x36, 0x39, 0xb8, 0x02, 0x9e, 0x1d,
	0xbd, 0x3b, 0x5c, 0x51, 0x75, 0x99, 0x2d, 0x46, 0x21, 0x4f, 0xc6, 0xaf, 0x38, 0x5f, 0xc5, 0x64,
	0x16, 0xf3, 0x2c, 0x9a, 0xc7, 0x81, 0x5a, 0x72, 0x91, 0x8c, 0x79, 0x4a, 0xd8, 0x41, 0xa2, 0x3f,
	0x46, 0x63, 0xca, 0x14, 0x11, 0x2c, 0x88, 0xc7, 0xe9, 0x62, 0x61, 0x9b, 0x0f, 0xef, 0xc3, 0x9f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0xd7, 0xcb, 0x16, 0xff, 0x9c, 0x05, 0x00, 0x00,
}
