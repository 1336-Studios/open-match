# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
#Copyright 2018 Google LLC
#Licensed under the Apache License, Version 2.0 (the "License");
#you may not use this file except in compliance with the License.
#You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
#Unless required by applicable law or agreed to in writing, software
#distributed under the License is distributed on an "AS IS" BASIS,
#WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#See the License for the specific language governing permissions and
#limitations under the License.
import grpc

from api.protobuf_spec import messages_pb2 as api_dot_protobuf__spec_dot_messages__pb2


class MmLogicStub(object):
  """Profile and match object functions
  If your matchmaking logic makes a match, it should CreateProposal.  If it 
  cannot, it should ReturnError.  
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetProfile = channel.unary_unary(
        '/api.MmLogic/GetProfile',
        request_serializer=api_dot_protobuf__spec_dot_messages__pb2.MatchObject.SerializeToString,
        response_deserializer=api_dot_protobuf__spec_dot_messages__pb2.MatchObject.FromString,
        )
    self.CreateProposal = channel.unary_unary(
        '/api.MmLogic/CreateProposal',
        request_serializer=api_dot_protobuf__spec_dot_messages__pb2.MatchObject.SerializeToString,
        response_deserializer=api_dot_protobuf__spec_dot_messages__pb2.Result.FromString,
        )
    self.ReturnError = channel.unary_unary(
        '/api.MmLogic/ReturnError',
        request_serializer=api_dot_protobuf__spec_dot_messages__pb2.Result.SerializeToString,
        response_deserializer=api_dot_protobuf__spec_dot_messages__pb2.Result.FromString,
        )
    self.GetPlayerPool = channel.unary_stream(
        '/api.MmLogic/GetPlayerPool',
        request_serializer=api_dot_protobuf__spec_dot_messages__pb2.PlayerPool.SerializeToString,
        response_deserializer=api_dot_protobuf__spec_dot_messages__pb2.PlayerPool.FromString,
        )
    self.GetAllIgnoredPlayers = channel.unary_unary(
        '/api.MmLogic/GetAllIgnoredPlayers',
        request_serializer=api_dot_protobuf__spec_dot_messages__pb2.IlInput.SerializeToString,
        response_deserializer=api_dot_protobuf__spec_dot_messages__pb2.Roster.FromString,
        )
    self.ListIgnoredPlayers = channel.unary_unary(
        '/api.MmLogic/ListIgnoredPlayers',
        request_serializer=api_dot_protobuf__spec_dot_messages__pb2.IlInput.SerializeToString,
        response_deserializer=api_dot_protobuf__spec_dot_messages__pb2.Roster.FromString,
        )


class MmLogicServicer(object):
  """Profile and match object functions
  If your matchmaking logic makes a match, it should CreateProposal.  If it 
  cannot, it should ReturnError.  
  """

  def GetProfile(self, request, context):
    """Send GetProfile a match object with the ID field populated, it will return a
    'filled' one.
    Note: filters are assumed to have been checked for validity by the
    backendapi  when accepting a profile
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateProposal(self, request, context):
    """CreateProposal  does the following:
    - adds all players in the Roster to the proposed player ignore list
    - writes the proposed match to the provided key
    - adds that key to the list of proposals to be considered
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ReturnError(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetPlayerPool(self, request, context):
    """Player listing and filtering functions

    RetrievePlayerPool gets the list of players for every Filter in the
    PlayerPool, and then removes all players it finds in the ignore list.  It
    combines the results, and returns the resulting player pool.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetAllIgnoredPlayers(self, request, context):
    """Ignore List functions

    IlInput is an empty message reserved for future use.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListIgnoredPlayers(self, request, context):
    """RetrieveIgnoreList retrieves players from the ignore list specified in the
    config file under 'ignoreLists.proposedPlayers.key'.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MmLogicServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetProfile': grpc.unary_unary_rpc_method_handler(
          servicer.GetProfile,
          request_deserializer=api_dot_protobuf__spec_dot_messages__pb2.MatchObject.FromString,
          response_serializer=api_dot_protobuf__spec_dot_messages__pb2.MatchObject.SerializeToString,
      ),
      'CreateProposal': grpc.unary_unary_rpc_method_handler(
          servicer.CreateProposal,
          request_deserializer=api_dot_protobuf__spec_dot_messages__pb2.MatchObject.FromString,
          response_serializer=api_dot_protobuf__spec_dot_messages__pb2.Result.SerializeToString,
      ),
      'ReturnError': grpc.unary_unary_rpc_method_handler(
          servicer.ReturnError,
          request_deserializer=api_dot_protobuf__spec_dot_messages__pb2.Result.FromString,
          response_serializer=api_dot_protobuf__spec_dot_messages__pb2.Result.SerializeToString,
      ),
      'GetPlayerPool': grpc.unary_stream_rpc_method_handler(
          servicer.GetPlayerPool,
          request_deserializer=api_dot_protobuf__spec_dot_messages__pb2.PlayerPool.FromString,
          response_serializer=api_dot_protobuf__spec_dot_messages__pb2.PlayerPool.SerializeToString,
      ),
      'GetAllIgnoredPlayers': grpc.unary_unary_rpc_method_handler(
          servicer.GetAllIgnoredPlayers,
          request_deserializer=api_dot_protobuf__spec_dot_messages__pb2.IlInput.FromString,
          response_serializer=api_dot_protobuf__spec_dot_messages__pb2.Roster.SerializeToString,
      ),
      'ListIgnoredPlayers': grpc.unary_unary_rpc_method_handler(
          servicer.ListIgnoredPlayers,
          request_deserializer=api_dot_protobuf__spec_dot_messages__pb2.IlInput.FromString,
          response_serializer=api_dot_protobuf__spec_dot_messages__pb2.Roster.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'api.MmLogic', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
