# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import mmlogic_pb2 as mmlogic__pb2


class APIStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetProfile = channel.unary_unary(
        '/API/GetProfile',
        request_serializer=mmlogic__pb2.Profile.SerializeToString,
        response_deserializer=mmlogic__pb2.Profile.FromString,
        )
    self.GetProposal = channel.unary_unary(
        '/API/GetProposal',
        request_serializer=mmlogic__pb2.MatchObject.SerializeToString,
        response_deserializer=mmlogic__pb2.MatchObject.FromString,
        )
    self.CreateProposal = channel.unary_unary(
        '/API/CreateProposal',
        request_serializer=mmlogic__pb2.MMFResults.SerializeToString,
        response_deserializer=mmlogic__pb2.Result.FromString,
        )
    self.ListPlayers = channel.unary_unary(
        '/API/ListPlayers',
        request_serializer=mmlogic__pb2.Filter.SerializeToString,
        response_deserializer=mmlogic__pb2.Roster.FromString,
        )
    self.GetPlayerPool = channel.unary_stream(
        '/API/GetPlayerPool',
        request_serializer=mmlogic__pb2.JsonFilterSet.SerializeToString,
        response_deserializer=mmlogic__pb2.PlayerPool.FromString,
        )
    self.ListIgnoredPlayers = channel.unary_unary(
        '/API/ListIgnoredPlayers',
        request_serializer=mmlogic__pb2.Timestamp.SerializeToString,
        response_deserializer=mmlogic__pb2.Roster.FromString,
        )
    self.GetCombinedIgnoreList = channel.unary_unary(
        '/API/GetCombinedIgnoreList',
        request_serializer=mmlogic__pb2.IlInput.SerializeToString,
        response_deserializer=mmlogic__pb2.Roster.FromString,
        )


class APIServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetProfile(self, request, context):
    """Profile and match object functions
    If your matchmaking logic makes a group, it should either make a Proposal
    or a Match Object (but only one of the two).  For more details about which
    you should create, refer to the documentation. 

    Send GetProfile an profile ID with an empty properties field, it will return a 'filled' one.
    Note that the filtersets are assumed to be checked by the backendapi
    when accepting a profile: the mmlogic api will choke on filter set JSON
    that the jsonpb module can't unmarshal to the FilterSet protobuf message!
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetProposal(self, request, context):
    """rpc GetFilterSet(FilterSet) returns (FilterSet) {}
    rpc CreateFilterSet(JsonFilter) returns (FilterSet) {}
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateProposal(self, request, context):
    """
    CreateProposal  does the following:
    - adds all players in the Roster to the proposed player ignore list
    - writes the proposed match to the provided key
    - adds that key to the list of proposals to be considered
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListPlayers(self, request, context):
    """TODO: fix args
    rpc UpdateConcurrentMMFCounter(Result) returns (Result) {} 

    Player listing and filtering functions

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetPlayerPool(self, request, context):
    """RetrievePlayerPool runs ListFilteredPlayers for every Filter in the input FilterSet, and then
    removes all players returned by a call to RetrieveCombinedIgnoreList.  It returns the resulting 
    player pool.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListIgnoredPlayers(self, request, context):
    """Ignore List functions

    RetrieveIgnoreList retrieves players from the
    'ignoreLists.proposedPlayers' ignore list specified in the config file
    that were placed on the list before the provided timestamp.  To retrieve
    all players on the list, provide the current time as the timestamp.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetCombinedIgnoreList(self, request, context):
    """
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_APIServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetProfile': grpc.unary_unary_rpc_method_handler(
          servicer.GetProfile,
          request_deserializer=mmlogic__pb2.Profile.FromString,
          response_serializer=mmlogic__pb2.Profile.SerializeToString,
      ),
      'GetProposal': grpc.unary_unary_rpc_method_handler(
          servicer.GetProposal,
          request_deserializer=mmlogic__pb2.MatchObject.FromString,
          response_serializer=mmlogic__pb2.MatchObject.SerializeToString,
      ),
      'CreateProposal': grpc.unary_unary_rpc_method_handler(
          servicer.CreateProposal,
          request_deserializer=mmlogic__pb2.MMFResults.FromString,
          response_serializer=mmlogic__pb2.Result.SerializeToString,
      ),
      'ListPlayers': grpc.unary_unary_rpc_method_handler(
          servicer.ListPlayers,
          request_deserializer=mmlogic__pb2.Filter.FromString,
          response_serializer=mmlogic__pb2.Roster.SerializeToString,
      ),
      'GetPlayerPool': grpc.unary_stream_rpc_method_handler(
          servicer.GetPlayerPool,
          request_deserializer=mmlogic__pb2.JsonFilterSet.FromString,
          response_serializer=mmlogic__pb2.PlayerPool.SerializeToString,
      ),
      'ListIgnoredPlayers': grpc.unary_unary_rpc_method_handler(
          servicer.ListIgnoredPlayers,
          request_deserializer=mmlogic__pb2.Timestamp.FromString,
          response_serializer=mmlogic__pb2.Roster.SerializeToString,
      ),
      'GetCombinedIgnoreList': grpc.unary_unary_rpc_method_handler(
          servicer.GetCombinedIgnoreList,
          request_deserializer=mmlogic__pb2.IlInput.FromString,
          response_serializer=mmlogic__pb2.Roster.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'API', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
